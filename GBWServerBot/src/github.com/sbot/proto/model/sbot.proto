syntax = "proto3";

package sbot.proto.model;

option csharp_namespace = "SBot.Proto.Model";
option go_package = "github.com/sbot/proto/model";
option java_multiple_files = true;
option java_outer_classname = "Sbot";
option java_package = "com.gbw3bao.sbot.proto.model";
option php_namespace = "SBot\\Proto\\Model";


//page query

message PageQuery {

  uint64 page = 1;
  uint64 size = 2;
}

message TimeRange {

  uint64 start = 1;
  uint64 end = 2;
}

message PageMessage {

  uint64 page =1;
  uint64 size =2;
  uint64 totalNum = 3;
  uint64 totalPage = 4;
  
}

//attack task query and reply
message AttackTaskQuery {

  string taskId = 1;
  string userId = 2;
  string name = 3;
  TimeRange time = 4;
  PageQuery page = 5;
}

message AttackTaskMessage {

  string taskId = 1;

  string name = 2;

  string userId = 3;

  string host = 4;

  int32  port = 5;

  string user = 6;

  string passwd = 7;

  string privateKey = 8;

  string os = 9;

  string cbot = 10;

  string cbotPath = 11;

  uint64 time = 12;
}

message AttackTaskReply {

  repeated AttackTaskMessage messages =1;

  PageMessage page = 2;
}

//attacked nodes query and reply
message AttackedNodeQuery {

  string userId = 1;
  string taskId = 2;
  string parentNodeId = 3;
  string nodeId = 4;
  string nodeIP = 5;
  string mac = 6;
  string attackType = 7;

  PageQuery page = 8;
  TimeRange time = 9;
  
}

message AttackedNodeMessage {

  string userId = 1;

  string taskId = 2;

  string parentNodeID = 3;

  string nodeId = 4;

  //the cbot version
  string version = 5;

  //the local ip address that been attacked node
  string localIP = 6;

  // the out ip address that been attacked node
  string outIP = 7;

  // the mac address that been attacked node
  string mac = 8;

  //the os that been attacked node
  string os = 9;

  //the system arch
  string arch = 10;

  //the current user
  string user = 11;

  //the host name that been attacked node
  string hostName = 12;

  //the create node time
  uint64 time = 13;

  //the last ping node time
  uint64 lastTime = 14;

  string attackType = 15;

  string sbot = 16;

}

message AttackedNodeReply {

  PageMessage page = 1;

  repeated AttackedNodeMessage nodes = 2;

}

//attack process query and reply
message AttackProcessQuery {

  string userId = 1;
  string taskId = 2;
  string nodeId = 3;
  string attackType = 4;

  PageQuery page = 5;
  TimeRange time = 6;
}

message AttackProcessMessage {

  string userId = 1;

  string taskId = 2;

  string nodeId = 3;

  uint64 time = 4;

  string targetIP = 5;

  string targetHost = 6;

  int32  targetPort = 7;

  string proto = 8;

  string app = 9;

  string os = 10;

  string attackName = 11;

  string attackType = 12;

  int32 status = 13;

  string payload = 14;

  string result = 15;

  string details = 16;

}

message AttackProcessMessageReply {

  PageMessage page = 1;

  repeated AttackProcessMessage aps = 2;

}

//download files query and reply
message AttackedNodeDownloadFileQuery {

  string userId = 1;
  string taskId = 2;
  string nodeId = 3;
  string attackType = 4;

  PageQuery page = 5;

  TimeRange time = 6;
}


message AttackedNodeDownloadFileMessage {

  string userId = 1;
  string taskId = 2;
  string nodeId = 3;
  string url = 4;
  string fname = 5;

  string attackType = 6;
  string attackIP = 7;
  string targetIP = 8;
  int32  targetPort = 9;
  string targetOutIP = 10;
  string downloadTool = 11;
  string userAgent = 12;

  uint64 time = 13;

}

message AttackedNodeDownloadFileReply {

  PageMessage page = 1;
  repeated AttackedNodeDownloadFileMessage downloadFiles = 2;

}

message FacetRequest {

  string userId = 1;

  string term = 2;

  int32  topN = 3;

  bool  isDec = 4;

}

message FacetItem {

  string key = 1;
  uint64  count = 2;
}

message FacetReply {

  repeated FacetItem items =1 ;

}

message Count {

  uint64  c = 1;

}

message CountRequest {

  string userId = 1;

}

message Empty {

}




